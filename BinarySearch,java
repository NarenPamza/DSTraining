package com.naren.core;

public class BinarySearch {

	public static void main(String[] args) {

		int a[] = { 1, 2, 3, 4, 5 };
		int l = 0;
		int r = a.length;
		int key = 9;
		System.out.println(search(a, l, r - 1, key));

		System.out.println(binarySearchRecursive(a,l,r-1,key));
	}

	private static boolean binarySearchRecursive(int[] a, int l, int r, int key) {
		
		if (l > r) {
			return false;
		}
		
		int mid = (l + r) / 2;
		
		if (a[mid] == key) {
			return true;
		}
		
		if (a[mid] < key) {
			l = mid + 1;
			return binarySearchRecursive(a, l, r, key);

		} else {
			r = mid - 1;
			return binarySearchRecursive(a, l, r, key);
		}
	}

	private static boolean search(int[] a, int l, int r, int key) {

		while (l <= r) {

			int mid = (l + r) / 2;

			if (a[mid] == key) {
				return true;
			}

			if (a[mid] < key) {
				l = mid + 1;

			} else {
				r = mid - 1;
			}

		}
		return false;
	}
}
